{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rsagar\\\\react-spring-boot-boilerplate\\\\client\\\\src\\\\components\\\\UrlForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrlForm = () => {\n  _s();\n  const [originalUrl, setOriginalUrl] = useState('');\n  const [shortUrl, setShortUrl] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch(`${process.env.REACT_APP_API_BASE_URL}/shorten`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        originalUrl: originalUrl\n      }) // or your field name\n    });\n\n    const short = await res.text();\n    console.log(short, \"short url\");\n    setShortUrl(short);\n  };\n  const handleRedirect = async shortUrl => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}`, {\n        method: \"GET\",\n        redirect: \"manual\",\n        body: JSON.stringify({\n          shortCode: shortUrl\n        })\n      });\n      if (response.status === 302) {\n        window.location.href = response.headers.get(\"Location\");\n      } else if (response.status === 410) {\n        alert(\"This URL has expired.\");\n      } else if (response.status === 404) {\n        alert(\"URL not found.\");\n      }\n    } catch (err) {\n      alert(\"Server error.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: originalUrl,\n        onChange: e => setOriginalUrl(e.target.value),\n        placeholder: \"Enter URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Shorten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), shortUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Short URL:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `${process.env.REACT_APP_API_BASE_URL}/${shortUrl}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: `${process.env.REACT_APP_API_BASE_URL}/${shortUrl}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UrlForm, \"Lv+WXyLTyr7ekhyJ33ZL6fMf1yg=\");\n_c = UrlForm;\nexport default UrlForm;\nvar _c;\n$RefreshReg$(_c, \"UrlForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UrlForm","_s","originalUrl","setOriginalUrl","shortUrl","setShortUrl","handleSubmit","e","preventDefault","res","fetch","process","env","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","short","text","console","log","handleRedirect","response","redirect","shortCode","status","window","location","href","get","alert","err","children","onSubmit","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","rel","_c","$RefreshReg$"],"sources":["C:/Users/rsagar/react-spring-boot-boilerplate/client/src/components/UrlForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UrlForm = () => {\r\n  const [originalUrl, setOriginalUrl] = useState('');\r\n  const [shortUrl, setShortUrl] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const res = await fetch(`${process.env.REACT_APP_API_BASE_URL}/shorten`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ originalUrl: originalUrl }) // or your field name\r\n      });\r\n\r\n    const short = await res.text();\r\n    console.log(short, \"short url\")\r\n    setShortUrl(short);\r\n  };\r\n\r\n  const handleRedirect = async (shortUrl) => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}`, { method: \"GET\", redirect: \"manual\",body: JSON.stringify({ shortCode: shortUrl })});\r\n      if (response.status === 302) {\r\n        window.location.href = response.headers.get(\"Location\");\r\n      } else if (response.status === 410) {\r\n        alert(\"This URL has expired.\");\r\n      } else if (response.status === 404) {\r\n        alert(\"URL not found.\");\r\n      }\r\n    } catch (err) {\r\n      alert(\"Server error.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input value={originalUrl} onChange={(e) => setOriginalUrl(e.target.value)} placeholder=\"Enter URL\" />\r\n        <button type=\"submit\">Shorten</button>\r\n      </form>\r\n      {shortUrl && (\r\n  <p>\r\n    Short URL:{\" \"}\r\n    <a\r\n      href={`${process.env.REACT_APP_API_BASE_URL}/${shortUrl}`}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      {`${process.env.REACT_APP_API_BASE_URL}/${shortUrl}`}\r\n    </a>\r\n  </p>\r\n)}\r\n\r\n      {/* {shortUrl && (\r\n  <p>\r\n    Short URL: <a href={shortUrl} target=\"_blank\" rel=\"noopener noreferrer\">{shortUrl}</a>\r\n  </p>\r\n)} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UrlForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}