{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rsagar\\\\react-spring-boot-boilerplate\\\\client\\\\src\\\\components\\\\UrlForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UrlForm() {\n  _s();\n  const [longUrl, setLongUrl] = useState('');\n  const [shortUrl, setShortUrl] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(process.env.REACT_APP_API_BASE_URL + '/api/url', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: longUrl\n      });\n      if (!res.ok) {\n        throw new Error('Server error');\n      }\n      const data = await res.text(); // Assuming backend returns plain text\n      setShortUrl(data);\n    } catch (err) {\n      alert('Invalid URL or Server Error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: longUrl,\n        onChange: e => setLongUrl(e.target.value),\n        placeholder: \"Enter URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Shorten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), shortUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Short URL:\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: shortUrl,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: shortUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(UrlForm, \"HiETVfhVxOGE3+4rjKte/+wy0nY=\");\n_c = UrlForm;\nvar _c;\n$RefreshReg$(_c, \"UrlForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UrlForm","_s","longUrl","setLongUrl","shortUrl","setShortUrl","handleSubmit","e","preventDefault","res","fetch","process","env","REACT_APP_API_BASE_URL","method","headers","body","ok","Error","data","text","err","alert","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/rsagar/react-spring-boot-boilerplate/client/src/components/UrlForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function UrlForm() {\r\n  const [longUrl, setLongUrl] = useState('');\r\n  const [shortUrl, setShortUrl] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await fetch(process.env.REACT_APP_API_BASE_URL + '/api/url', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'text/plain',\r\n        },\r\n        body: longUrl,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        throw new Error('Server error');\r\n      }\r\n\r\n      const data = await res.text(); // Assuming backend returns plain text\r\n      setShortUrl(data);\r\n    } catch (err) {\r\n      alert('Invalid URL or Server Error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={longUrl}\r\n          onChange={(e) => setLongUrl(e.target.value)}\r\n          placeholder=\"Enter URL\"\r\n        />\r\n        <button type=\"submit\">Shorten</button>\r\n      </form>\r\n      {shortUrl && (\r\n        <p>\r\n          Short URL:{' '}\r\n          <a href={shortUrl} target=\"_blank\" rel=\"noreferrer\">\r\n            {shortUrl}\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB,GAAG,UAAU,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEd;MACR,CAAC,CAAC;MAEF,IAAI,CAACO,GAAG,CAACQ,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACjC;MAEA,MAAMC,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,EAAE,CAAC,CAAC;MAC/Bf,WAAW,CAACc,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAMyB,QAAQ,EAAElB,YAAa;MAAAiB,QAAA,gBAC3BxB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAExB,OAAQ;QACfyB,QAAQ,EAAGpB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC5CG,WAAW,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB,eACFlC,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjC,EACN7B,QAAQ,iBACPL,OAAA;MAAAwB,QAAA,GAAG,YACS,EAAC,GAAG,eACdxB,OAAA;QAAGmC,IAAI,EAAE9B,QAAS;QAACwB,MAAM,EAAC,QAAQ;QAACO,GAAG,EAAC,YAAY;QAAAZ,QAAA,EAChDnB;MAAQ;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAAChC,EAAA,CA/CuBD,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}